{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/global/global.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth/auth.guard.ts","./src/app/services/authentication/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    firebaseConfig: {\n        apiKey: \"AIzaSyCePs4wTttw05CrzUjq5MVVK0Ae4UvIyuA\",\n        authDomain: \"greviews-dev.firebaseapp.com\",\n        databaseURL: \"https://greviews-dev-default-rtdb.firebaseio.com\",\n        projectId: \"greviews-dev\",\n        storageBucket: \"greviews-dev.appspot.com\",\n        messagingSenderId: \"714990806231\",\n        appId: \"1:714990806231:web:f32d36114072d5fa8ebc92\",\n        measurementId: \"G-4Y7THK0WS5\"\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { FirebaseApp, initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { environment } from 'src/environments/environment';\nimport { browserLocalPersistence, getAuth, setPersistence } from 'firebase/auth';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GlobalService {\n    app: FirebaseApp | undefined;\n\n    constructor() { }\n\n    /* Initialize firebase app with project configuration.\n     * Save the app object for global use.\n    */\n    initFirebase() {\n        // Initialize Firebase\n        const app = initializeApp(environment.firebaseConfig);\n        const analytics = getAnalytics(app);\n\n        const auth = getAuth(app);\n        (async () => {\n            await setPersistence(auth, browserLocalPersistence);\n        })();\n\n        this.app = app;\n    }\n\n    /* Returns the firebase app object for global use\n     * returns app { FirebaseApp }\n    */\n    getFirebaseApp() {\n        return this.app;\n    }\n}\n","import { Component } from '@angular/core';\nimport { GlobalService } from './services/global/global.service';\nimport { AuthService } from './services/authentication/auth.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'web-app';\n\n    constructor(\n        private globalService: GlobalService\n    ) {\n        globalService.initFirebase();\n    }\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GlobalService } from './services/global/global.service';\nimport { AuthService } from './services/authentication/auth.service';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule\n\t],\n\tproviders: [\n\t\tGlobalService,\n\t\tAuthService\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, UrlSegmentGroup, UrlSegment } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/authentication/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private authService: AuthService\n    ) { }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        // if (!this.authService.isUserLoggedIn()) {\n        //     let currentUrl = state.url;\n        //     let urlTree = new UrlTree();\n        //     urlTree.root = new UrlSegmentGroup([new UrlSegment(\"login\", {})], {});\n        //     urlTree.queryParams = {\n        //         returnUrl: currentUrl\n        //     }\n        //     return urlTree;\n        // }\n\n        return true;\n    }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { getAuth } from 'firebase/auth';\nimport { TUserProfile } from 'types/user/TUserProfile';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(\n        private router: Router\n    ) { }\n\n    /* Checks if user is authenticated currently in the firebase session\n     * returns boolean\n    */\n    isUserLoggedIn() {\n        const auth = getAuth();\n\n        return auth.currentUser ? true : false;\n    }\n\n    getLoggedInUserData(): TUserProfile {\n        const auth = getAuth();\n\n        return {\n            displayName: auth.currentUser?.displayName || ''\n        }\n    }\n\n    signOut() {\n        const auth = getAuth();\n\n        auth.signOut();\n        this.router.navigate(['/login']);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth/auth.guard';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        loadChildren: () => import('./modules/home/home.module').then(m => m.HomeModule)\n    },\n    { \n        path: 'login',\n        loadChildren: () => import('./modules/authentication/auth.module').then(m => m.AuthModule)\n    },\n    { \n        path: 'profile',\n        canActivate: [AuthGuard],\n        loadChildren: () => import('./modules/profile/profile.module').then(m => m.ProfileModule)\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}